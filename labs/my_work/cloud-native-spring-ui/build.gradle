buildscript {
    ext {
        springBootVersion = '2.0.7.RELEASE'
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/snapshot" }
	    maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }
    dependencies {
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0-beta1")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '2.0'
    id 'java'
}

repositories {
    jcenter() // or Maven central, required for Lombok dependency
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'io.spring.dependency-management'

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
    dotGitDirectory = "${project.rootDir}/../../.."
}

import org.apache.tools.ant.filters.*

processResources {
    filter ReplaceTokens, tokens: [
	"application.name": project.property("application.name"),
	"application.description": project.property("application.description"),
    "application.version": project.property("version")
    ]
}

dependencyManagement {
    imports {
	    mavenBom "com.vaadin:vaadin-bom:8.6.1"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.0.3.RELEASE"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compileOnly('org.projectlombok:lombok:1.18.4')
    compile('javax.xml.bind:jaxb-api:2.4.0-b180725.0427')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.vaadin:vaadin-spring-boot-starter')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    compile('org.hibernate:hibernate-core:5.3.7.Final')
    compile('io.pivotal:cloud-native-spring:1.0-SNAPSHOT')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

repositories {
    maven { url "https://repo.spring.io/plugins-release" }
    maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
    mavenLocal()
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    classifier = 'exec'
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}

tasks.withType(Test) {
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        jvmArgs += ["--add-opens", "java.base/java.lang=ALL-UNNAMED"]
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.pivotal'
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
